#!groovy

pipeline {
  agent { node { label 'linux' } }
  options {
    buildDiscarder logRotator( numToKeepStr: '50' )
  }
  parameters {
    string( defaultValue: 'servlet-module-atleast', description: 'GIT branch name to build TCK (master/servlet-module-atleast)',
            name: 'TCK_BRANCH' )

    choice(
            description: 'TCK Github org',
            name: 'GITHUB_ORG_TCK',
            choices: ['olamy','eclipse-ee4j']
    )
    string( defaultValue: 'jdk11', description: 'JDK to use', name: 'JDKBUILD' )

  }

  stages {

    stage("Build/Run TCK") {
      steps {
        container('jetty-build') {
          ws('run-tck') {
            deleteDir()
            checkout([$class: 'GitSCM',
                      branches: [[name: "*/$TCK_BRANCH"]],
                      extensions: [[$class: 'CloneOption', depth: 1, noTags: true, shallow: true]],
                      userRemoteConfigs: [[url: 'https://github.com/${GITHUB_ORG_TCK}/jakartaee-tck']]])
            timeout(time: 30, unit: 'MINUTES') {
              withEnv(["JAVA_HOME=${tool "$JDKBUILD"}",
                       "PATH+MAVEN=${env.JAVA_HOME}/bin:${tool "maven3"}/bin",
                       "MAVEN_OPTS=-Xms2g -Xmx4g -Djava.awt.headless=true"]) {
                configFileProvider([configFile(fileId: 'oss-settings.xml', variable: 'GLOBAL_MVN_SETTINGS')]) {
                  sh "mvn -ntp install:install-file -Dfile=./lib/javatest.jar -DgroupId=javatest -DartifactId=javatest -Dversion=5.0 -Dpackaging=jar -N"
                  sh "mvn -ntp -s $GLOBAL_MVN_SETTINGS -V -B -U -pl :tck-run -am clean install -Dmaven.test.failure.ignore=true -e -Pglassfish-ci-managed -T2"
                }
              }
            }
          }
        }
      }
      post {
        always {
          junit testResults: '**/tck-tests-reports/TEST-**.xml'
        }
      }
    }
  }
}
